local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local LocalPlayer = Players.LocalPlayer
local workspace = game:GetService("Workspace")

--[[----------------------------------------------------------------------------------------------------------
                                        VARIABLES GLOBALES Y DE ESTADO
----------------------------------------------------------------------------------------------------------]]

-- Variables del ESP
local ESPConnection
local ESPSettings = {
    Innocent = {chams = false, tracer = false, box = false},
    Sheriff = {chams = false, tracer = false, box = false},
    Murder = {chams = false, tracer = false, box = false},
    Gun = {visible = false} -- Nueva categoría para la Gun
}
local TracerLines = {}
local BoxESP = {}
local GunMarker = nil -- Referencia al marcador de la Gun

-- Variables del Speed Glitch
local speedGlitchConnection
local speedGlitchEnabled = false
local speedGlitchValue = 16 -- Velocidad por defecto (equivalente a la normal)
local originalWalkSpeed = nil

-- **NUEVA** Variable para el estado minimizado
local isMinimized = false
local originalMainFrameSize = UDim2.new(0, 350, 0, 250)

--[[----------------------------------------------------------------------------------------------------------
                                        LÓGICA DE FUNCIONALIDADES
----------------------------------------------------------------------------------------------------------]]

-- Función para limpiar ESP de un jugador específico
local function CleanupPlayerESP(playerName)
    if TracerLines[playerName] then
        TracerLines[playerName]:Remove()
        TracerLines[playerName] = nil
    end
    if BoxESP[playerName] then
        for _, line in pairs(BoxESP[playerName]) do
            if line and line.Remove then line:Remove() end
        end
        BoxESP[playerName] = nil
    end
end

Players.PlayerRemoving:Connect(function(player)
    CleanupPlayerESP(player.Name)
end)

-- **NUEVA** Función para remover el marcador de la Gun
local function RemoveGunMarker()
    if GunMarker then
        GunMarker:Remove()
        GunMarker = nil
    end
end

-- **NUEVA** Función para crear el marcador de la Gun
local function CreateGunMarker(gunInstance)
    if not gunInstance or not gunInstance:IsA("Part") then
        RemoveGunMarker()
        return
    end

    GunMarker = GunMarker or Drawing.new("Circle")
    GunMarker.Radius = 10
    GunMarker.Color = Color3.fromRGB(255, 255, 0) -- Amarillo para destacar la Gun
    GunMarker.Thickness = 2
    GunMarker.Filled = true

    local camera = workspace.CurrentCamera

    RunService.Heartbeat:Connect(function()
        if gunInstance and gunInstance.Parent then
            local gunPosition, onScreen = camera:WorldToViewportPoint(gunInstance.Position)
            if onScreen then
                GunMarker.Position = Vector2.new(gunPosition.X, gunPosition.Y)
                GunMarker.Visible = ESPSettings.Gun.visible
            else
                GunMarker.Visible = false
            end
        else
            RemoveGunMarker()
        end
    end)
end

-- **NUEVA** Función para detectar la Gun en WeaponDisplays
local function DetectGun()
    local weaponDisplays = workspace:FindFirstChild("WeaponDisplays")
    if weaponDisplays then
        for _, item in pairs(weaponDisplays:GetChildren()) do
            if item.Name == "GunDisplay" and item:IsA("Part") then
                CreateGunMarker(item)
                return
            end
        end
    end
    RemoveGunMarker()
end

-- Función para activar o desactivar el ESP de la Gun
local function ToggleGunESP(state)
    ESPSettings.Gun.visible = state
    if state then
        DetectGun()
    else
        RemoveGunMarker()
    end
end

-- Función para activar/desactivar todo el ESP
local function ToggleESP()
    if ESPConnection then ESPConnection:Disconnect(); ESPConnection = nil; end
    for _, player in pairs(Players:GetPlayers()) do CleanupPlayerESP(player.Name); RemoveGunMarker() end
    for playerName in pairs(TracerLines) do if not Players:FindFirstChild(playerName) then CleanupPlayerESP(playerName) end end
    for playerName in pairs(BoxESP) do if not Players:FindFirstChild(playerName) then CleanupPlayerESP(playerName) end end
    local anyEnabled = false
    for _, settings in pairs(ESPSettings) do for _, enabled in pairs(settings) do if enabled then anyEnabled = true; break; end end if anyEnabled then break; end end
    if anyEnabled then
        ESPConnection = RunService.Heartbeat:Connect(function()
            DetectGun() -- Detectar la Gun en cada actualización
        end)
    end
end

--[[----------------------------------------------------------------------------------------------------------
                                        CREACIÓN DE LA INTERFAZ (GUI)
----------------------------------------------------------------------------------------------------------]]

-- Limpiar GUI anterior si existe
if LocalPlayer.PlayerGui:FindFirstChild("MurderMysteryGUI") then LocalPlayer.PlayerGui.MurderMysteryGUI:Destroy() end

-- Crear GUI Principal
local ScreenGui = Instance.new("ScreenGui", LocalPlayer:WaitForChild("PlayerGui"))
ScreenGui.Name = "MurderMysteryGUI"; ScreenGui.ResetOnSpawn = false; ScreenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

local MainFrame = Instance.new("Frame", ScreenGui)
MainFrame.Name = "MainFrame"; MainFrame.Size = originalMainFrameSize; MainFrame.Position = UDim2.new(0.5, -175, 0.5, -125); MainFrame.BackgroundColor3 = Color3.fromRGB(45, 45, 45); MainFrame.BorderSizePixel = 0
local MainCorner = Instance.new("UICorner", MainFrame); MainCorner.CornerRadius = UDim.new(0, 8)

local TitleBar = Instance.new("Frame", MainFrame)
TitleBar.Name = "TitleBar"; TitleBar.Size = UDim2.new(1, 0, 0, 30); TitleBar.BackgroundColor3 = Color3.fromRGB(35, 35, 35); TitleBar.Active = true
local TitleCorner = Instance.new("UICorner", TitleBar); TitleCorner.CornerRadius = UDim.new(0, 8)

local TitleLabel = Instance.new("TextLabel", TitleBar)
TitleLabel.Size = UDim2.new(1, -115, 1, 0); TitleLabel.Position = UDim2.new(0, 10, 0, 0); TitleLabel.BackgroundTransparency = 1; TitleLabel.Text = "Murder Mystery GUI"; TitleLabel.TextColor3 = Color3.new(1, 1, 1); TitleLabel.TextScaled = true; TitleLabel.Font = Enum.Font.GothamBold

local TabFrame = Instance.new("Frame", MainFrame)
TabFrame.Size = UDim2.new(1, 0, 0, 35); TabFrame.Position = UDim2.new(0, 0, 0, 30); TabFrame.BackgroundColor3 = Color3.fromRGB(55, 55, 55)

local ContentFrame = Instance.new("Frame", MainFrame)
ContentFrame.Size = UDim2.new(1, 0, 1, -65); ContentFrame.Position = UDim2.new(0, 0, 0, 65); ContentFrame.BackgroundTransparency = 1

local currentTab = "Visual"
local tabs = {"Visual", "Combat", "Main"}
local tabButtons = {}
local tabContents = {}

for i, tabName in ipairs(tabs) do
    local TabButton = Instance.new("TextButton", TabFrame)
    TabButton.Size = UDim2.new(1/3, -2, 1, -4); TabButton.Position = UDim2.new((i-1)/3, 1, 0, 2); TabButton.BackgroundColor3 = tabName == currentTab and Color3.fromRGB(75, 75, 75) or Color3.fromRGB(65, 65, 65); TabButton.Text = tabName; TabButton.TextColor3 = Color3.new(1, 1, 1); TabButton.TextScaled = true; TabButton.Font = Enum.Font.Gotham
    local TabCorner = Instance.new("UICorner", TabButton); TabCorner.CornerRadius = UDim.new(0, 4)
    tabButtons[tabName] = TabButton
end

for _, tabName in ipairs(tabs) do
    local TabContent = Instance.new("ScrollingFrame", ContentFrame)
    TabContent.Size = UDim2.new(1, -10, 1, -10); TabContent.Position = UDim2.new(0, 5, 0, 5); TabContent.BackgroundTransparency = 1; TabContent.ScrollBarThickness = 4; TabContent.ScrollBarImageColor3 = Color3.fromRGB(75, 75, 75); TabContent.CanvasSize = UDim2.new(0, 0, 0, 300); TabContent.Visible = tabName == currentTab
    tabContents[tabName] = TabContent
end

local function SwitchTab(tabName)
    currentTab = tabName
    for name, button in pairs(tabButtons) do button.BackgroundColor3 = name == tabName and Color3.fromRGB(75, 75, 75) or Color3.fromRGB(65, 65, 65) end
    for name, content in pairs(tabContents) do content.Visible = name == tabName end
end

for tabName, button in pairs(tabButtons) do
    button.MouseButton1Click:Connect(function() SwitchTab(tabName) end)
end

-- Función para crear botones toggle
local function CreateToggleButton(parent, text, defaultState, callback)
    local ToggleFrame = Instance.new("Frame", parent)
    ToggleFrame.Size = UDim2.new(1, 0, 0, 25); ToggleFrame.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
    Instance.new("UICorner", ToggleFrame).CornerRadius = UDim.new(0, 4)
    local Label = Instance.new("TextLabel", ToggleFrame)
    Label.Size = UDim2.new(1, -50, 1, 0); Label.Position = UDim2.new(0, 5, 0, 0); Label.BackgroundTransparency = 1; Label.Text = text; Label.TextColor3 = Color3.new(1, 1, 1); Label.TextXAlignment = Enum.TextXAlignment.Left; Label.TextScaled = true; Label.Font = Enum.Font.Gotham
    local ToggleButton = Instance.new("TextButton", ToggleFrame)
    ToggleButton.Size = UDim2.new(0, 40, 0, 18); ToggleButton.Position = UDim2.new(1, -43, 0.5, -9); ToggleButton.BackgroundColor3 = defaultState and Color3.fromRGB(85, 170, 85) or Color3.fromRGB(170, 85, 85); ToggleButton.Text = defaultState and "ON" or "OFF"; ToggleButton.TextColor3 = Color3.new(1, 1, 1); ToggleButton.TextScaled = true; ToggleButton.Font = Enum.Font.GothamBold
    Instance.new("UICorner", ToggleButton).CornerRadius = UDim.new(0, 3)
    local isToggled = defaultState
    ToggleButton.MouseButton1Click:Connect(function()
        isToggled = not isToggled
        ToggleButton.BackgroundColor3 = isToggled and Color3.fromRGB(85, 170, 85) or Color3.fromRGB(170, 85, 85)
        ToggleButton.Text = isToggled and "ON" or "OFF"
        callback(isToggled)
    end)
    return ToggleFrame
end

local VisualLayout = Instance.new("UIListLayout", tabContents["Visual"])
VisualLayout.SortOrder = Enum.SortOrder.LayoutOrder; VisualLayout.Padding = UDim.new(0, 3)

-- **NUEVA** Opción para el ESP de la Gun
CreateToggleButton(tabContents["Visual"], "Gun ESP", false, function(state)
    ToggleGunESP(state)
end).LayoutOrder = 1

print("GUI actualizada con opción para Gun ESP en la pestaña Visual")
