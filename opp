-- Script Rayfield optimizado para eliminar scripts de da√±o en Roblox
local url = "https://sirius.menu/rayfield"
local success, Rayfield = pcall(function()
    return loadstring(game:HttpGet(url))()
end)

if not success or not Rayfield then
    warn("‚ùå Error al cargar Rayfield. Verifica tu conexi√≥n o el enlace.")
    return
end

local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local player = Players.LocalPlayer

-- === FUNCIONES DE UTILIDAD ===

-- Destruye un objeto de forma segura
local function safeDestroy(obj)
    if obj and obj.Parent then
        obj:Destroy()
    end
end

-- Ejecuta una funci√≥n con manejo de errores
local function safeCall(func, ...)
    local success, result = pcall(func, ...)
    if not success then
        warn("‚ö†Ô∏è Error:", result)
    end
    return success, result
end

-- Verifica si un script contiene patrones peligrosos
local dangerousPatterns = {
    "TakeDamage",
    "Health%s*=",
    "hit:FindPartOnRay",
    "Touched:Connect",
    "Humanoid.Health",
    "ApplyDamage",
    "damage",
    "kill",
    "destroy"
}

local function isDangerousScript(scriptObj)
    if not scriptObj:IsA("LuaSourceContainer") then return false end
    local source = scriptObj.Source or ""
    source = source:lower()
    for _, pattern in ipairs(dangerousPatterns) do
        if string.find(source, pattern:lower(), 1, true) then
            return true
        end
    end
    return false
end

-- Busca modelos recursivamente SIN bucles infinitos
local function getAllModelsRecursively()
    local allModels = {}
    local visited = {}

    local function findModels(parent)
        if visited[parent] then return end
        visited[parent] = true

        for _, child in ipairs(parent:GetChildren()) do
            if child:IsA("Model") then
                table.insert(allModels, child)
                findModels(child)
            end
        end
    end

    findModels(workspace)
    if workspace:FindFirstChild("place") then
        table.insert(allModels, workspace.place)
    end

    return allModels
end

-- === ELIMINACI√ìN ACTIVA ===

-- Elimina scripts peligrosos en un modelo espec√≠fico
local function removeDangerousScriptsInModel(model)
    if not model or not model.Parent then return 0 end

    local count = 0
    for _, descendant in ipairs(model:GetDescendants()) do
        -- Eliminar por nombre peligroso
        if string.find(descendant.Name:lower(), "damage") or
           descendant.Name == "TakeDamage" or
           descendant.Name == "TouchInterest" or
           descendant.Name == "Killer" then
            safeDestroy(descendant)
            count += 1
        end

        -- Eliminar Behaviours.Killer
        if descendant.Name == "Behaviours" and descendant:FindFirstChild("Killer") then
            safeDestroy(descendant.Killer)
            count += 1
        end

        -- Eliminar scripts peligrosos por contenido
        if descendant:IsA("Script") or descendant:IsA("LocalScript") or descendant:IsA("ModuleScript") then
            if isDangerousScript(descendant) then
                safeDestroy(descendant)
                count += 1
            end
        end
    end
    return count
end

-- Escaneo √∫nico de toda la workspace
local function removeAllDangerousScripts()
    local total = 0
    local models = getAllModelsRecursively()
    for _, model in ipairs(models) do
        total += removeDangerousScriptsInModel(model)
    end
    return total
end

-- === MONITOREO REACTIVO (EFICIENTE) ===

local monitoringEnabled = false
local monitorThread = nil

local function startReactiveMonitoring()
    if monitoringEnabled then return end
    monitoringEnabled = true

    -- Reacciona a nuevos objetos
    workspace.DescendantAdded:Connect(function(child)
        if not monitoringEnabled then return end

        -- Eliminar por nombre inmediatamente
        if child.Name == "TakeDamage" or child.Name == "TouchInterest" or
           string.find(child.Name:lower(), "damage") then
            task.delay(0, function() safeDestroy(child) end)
            return
        end

        -- Evaluar scripts nuevos
        if (child:IsA("Script") or child:IsA("LocalScript")) and isDangerousScript(child) then
            task.delay(0, function() safeDestroy(child) end)
        end
    end)

    -- Escaneo peri√≥dico ligero (cada 0.5s)
    monitorThread = task.spawn(function()
        while monitoringEnabled do
            removeAllDangerousScripts()
            task.wait(0.5)
        end
    end)
end

local function stopReactiveMonitoring()
    monitoringEnabled = false
    if monitorThread and coroutine.status(monitorThread) ~= "dead" then
        task.cancel(monitorThread)
    end
end

-- === INTERFAZ RAYFIELD ===

local Window = Rayfield:CreateWindow({
    Name = "üíÄ Universal Damage Eliminator",
    LoadingTitle = "Cargando...",
    LoadingSubtitle = "Optimizado y seguro",
    ConfigurationSaving = {
        Enabled = true,
        FolderName = "DamageEliminator",
        FileName = "Config"
    },
    Discord = { Enabled = false },
    KeySystem = false
})

local MainTab = Window:CreateTab("üõ°Ô∏è Eliminaci√≥n", 4483362458)

MainTab:CreateButton({
    Name = "üßπ Eliminar Da√±o (Una vez)",
    Callback = function()
        local count = safeCall(removeAllDangerousScripts)
        Rayfield:Notify({
            Title = "‚úÖ Eliminaci√≥n completada",
            Content = "Scripts peligrosos eliminados: " .. (count or 0),
            Duration = 4,
            Image = 4483362458
        })
    end
})

local monitorToggle = MainTab:CreateToggle({
    Name = "üëÅÔ∏è Monitoreo Reactivo",
    CurrentValue = false,
    Callback = function(enabled)
        if enabled then
            startReactiveMonitoring()
            Rayfield:Notify({
                Title = "üëÅÔ∏è Activo",
                Content = "Monitoreo reactivo iniciado",
                Duration = 2,
                Image = 4483362458
            })
        else
            stopReactiveMonitoring()
            Rayfield:Notify({
                Title = "‚èπÔ∏è Detenido",
                Content = "Monitoreo reactivo detenido",
                Duration = 2,
                Image = 4483362458
            })
        end
    end
})

MainTab:CreateButton({
    Name = "üöÄ Activar Todo",
    Callback = function()
        local count = safeCall(removeAllDangerousScripts)
        monitorToggle:Set(true)
        Rayfield:Notify({
            Title = "üöÄ Todo activo",
            Content = "Eliminaci√≥n + monitoreo activado\nScripts eliminados: " .. (count or 0),
            Duration = 5,
            Image = 4483362458
        })
    end
})

MainTab:CreateLabel("üí° Solo elimina scripts con comportamiento peligroso")
MainTab:CreateLabel("üîí M√°s seguro y menos agresivo que eliminar TODO")

print("‚úÖ Universal Damage Eliminator v2.0 cargado")
